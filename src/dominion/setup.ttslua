#include !/util/array
#include cards/index

-- Set random seed
math.randomseed(os.time())

-- From left to right
supplyPositions = {
  -- Top Row
  {-8.00, 1.14, -3.00},
  {-4.00, 1.14, -3.00},
  {0.00, 1.14, -3.00},
  {4.00, 1.14, -3.00},
  {8.00, 1.14, -3.00},
  -- Bottom Row
  {-8.00, 1.14, -9.00},
  {-4.00, 1.14, -9.00},
  {0.00, 1.14, -9.00},
  {4.00, 1.14, -9.00},
  {8.00, 1.14, -9.00}
}

SUPPLY_ELIGIBLE_CARDS = {
  Adventurer,
  Advisor,
  Alchemist,
  Altar,
  Ambassador,
  Amulet,
  Apothecary,
  Apprentice,
  Archive,
  Armory,
  Artificer,
  Artisan,
  Baker,
  BandOfMisfits,
  BanditCamp,
  Bandit,
  Bank,
  Baron,
  Bazaar,
  Beggar,
  Bishop,
  -- BlackMarket,
  BorderVillage,
  BridgeTroll,
  Bridge,
  Bureaucrat,
  Butcher,
  Cache,
  CandlestickMaker,
  Capital,
  CaravanGuard,
  Caravan,
  Cartographer,
  Catacombs,
  Catapult,
  Cellar,
  Chancellor,
  Chapel,
  ChariotRace,
  Charm,
  CityQuarter,
  City,
  CoinOfTheRealm,
  Conspirator,
  Contraband,
  Coppersmith,
  Count,
  Counterfeit,
  CountingHouse,
  Courtier,
  Courtyard,
  Crossroads,
  Crown,
  Cultist,
  Cutpurse,
  DeathCart,
  Develop,
  Diplomat,
  DistantLands,
  Doctor,
  Duchess,
  Duke,
  Dungeon,
  Duplicate,
  Embargo,
  Embassy,
  Encampment,
  Enchantress,
  Engineer,
  Envoy,
  Expand,
  Explorer,
  Fairgrounds,
  Familiar,
  FarmersMarket,
  FarmingVillage,
  Farmland,
  Feast,
  Feodum,
  Festival,
  FishingVillage,
  FoolsGold,
  Forager,
  Forge,
  Fortress,
  FortuneTeller,
  -- Forum,
  Gardens,
  Gear,
  GhostShip,
  Giant,
  Gladiator,
  Golem,
  -- Goons,
  Governer,
  GrandMarket,
  Graverobber,
  GreatHall,
  Groundskeeper,
  Guide,
  Haggler,
  Hamlet,
  Harbinger,
  Harem,
  Harvest,
  HauntedWoods,
  Haven,
  Herald,
  Herbalist,
  Hermit,
  Highway,
  Hireling,
  Hoard,
  HornOfPlenty,
  HorseTraders,
  HuntingParty,
  IllGottenGains,
  Inn,
  Ironmonger,
  Ironworks,
  Island,
  JackOfAllTrades,
  Jester,
  Journeyman,
  JunkDealer,
  KingsCourt,
  Knights,
  Laboratory,
  Legionary,
  Library,
  Lighthouse,
  Loan,
  Lookout,
  LostCity,
  Lurker,
  Magpie,
  Mandarin,
  Marauder,
  Margrave,
  Market,
  MarketSquare,
  Masquerade,
  Masterpiece,
  Menagerie,
  MerchantGuild,
  MerchantShip,
  Merchant,
  Messenger,
  Militia,
  Mill,
  Mine,
  MiningVillage,
  Minion,
  Mint,
  Miser,
  Moat,
  Moneylender,
  Monument,
  Mountebank,
  Mystic,
  NativeVillage,
  Navigator,
  NobleBrigand,
  Nobles,
  NomadCamp,
  Oasis,
  Oracle,
  Outpost,
  Overlord,
  Page,
  Patrician,
  Patrol,
  Pawn,
  PearlDiver,
  Peasant,
  Peddler,
  PhilosophersStone,
  Pillage,
  PirateShip,
  Platinum,
  Plaza,
  Poacher,
  PoorHouse,
  Port,
  -- Possession,
  Prince,
  Procession,
  Quarry,
  Rabble,
  Ranger,
  Ratcatcher,
  Rats,
  Raze,
  Rebuild,
  Relic,
  Remake,
  Remodel,
  Replace,
  Rogue,
  RoyalBlacksmith,
  RoyalCarriage,
  RoyalSeal,
  Saboteur,
  Sacrifice,
  Sage,
  Salvager,
  Scavenger,
  Scheme,
  Scout,
  ScryingPool,
  SeaHag,
  SecretChamber,
  Sentry,
  Settlers,
  ShantyTown,
  SilkRoad,
  Smithy,
  Smugglers,
  Soothsayer,
  SpiceMerchant,
  Spy,
  Squire,
  Stables,
  Stash,
  Steward,
  Stonemason,
  Storeroom,
  Storyteller,
  SwampHag,
  Swindler,
  Tactician,
  Talisman,
  Taxman,
  Temple,
  Thief,
  ThroneRoom,
  Torturer,
  Tournament,
  TradeRoute,
  Trader,
  TradingPost,
  Transmogrify,
  Transmute,
  TreasureMap,
  TreasureTrove,
  Treasury,
  Tribute,
  Tunnel,
  University,
  Upgrade,
  Urchin,
  Vagrant,
  Vassal,
  Vault,
  Venture,
  Villa,
  Village,
  Vineyard,
  WalledVillage,
  WanderingMinstrel,
  Warehouse,
  Watchtower,
  Wharf,
  WildHunt,
  WineMerchant,
  WishingWell,
  Witch,
  Woodcutter,
  WorkersVillage,
  Workshop,
  YoungWitch,
}

for _,card in ipairs(SUPPLY_ELIGIBLE_CARDS) do
  print(getObjectFromGUID(card.guid).getName())
end
print(#SUPPLY_ELIGIBLE_CARDS)

function setup()
  -- Selection
  selectionPool = arrayShuffle(SUPPLY_ELIGIBLE_CARDS)
  selectedCards = {};
  for i=1,10 do
    selectedCard = table.remove(selectionPool, 1)
    table.insert(selectedCards, selectedCard)
  end

  -- TODO: Platinum + Colony setup

  -- Potion Setup
  if (#arrayFilter(selectedCards, function(card) return card.potion > 0 end) > 0) then
    Potion:setup()
  end

  -- Placement
  sortedCards = arraySortTables(selectedCards, "cost")
  for index,card in pairs(sortedCards) do
    obj = getObjectFromGUID(card.guid)
    card:setup(obj, supplyPositions[index])
  end

  -- TODO: Trade Route setup
end
